# Copyright 2017 Rene Rivera
# Distributed under the Boost Software License, Version 1.0.
# (See accompanying file LICENSE.txt or copy at
# https://www.bfgroup.xyz/b2/LICENSE.txt)

import feature ;

#| tag::doc[]

[[bbv2.builtin.features.instruction-set]]`instruction-set`::
*Allowed values:* depends on the used toolset.
+
Specifies for which specific instruction set the code should be generated. The
code in general might not run on processors with older/different instruction
sets.
+
While B2 allows a large set of possible values for this features,
whether a given value works depends on which compiler you use. Please see
the section <<C++ Compilers>> for details.

|# # end::doc[]

local arm-instruction-sets =
    armv2
    armv2a
    armv3
    armv3m
    armv4
    armv4t
    armv5
    armv5e
    armv5t
    armv5te
    armv6
    armv6j
    armv6k
    armv6kz
    armv6t2
    armv6z
    armv6zk
    armv7
    armv7-a
    armv7ve
    armv8-a
    armv8.1-a
    armv8.2-a
    armv8.3-a
    armv8.4-a
    armv7-r
    armv8-r
    armv6-m
    armv6s-m
    armv7-m
    armv7e-m
    armv8-m.base
    armv8-m.main
    iwmmxt
    iwmmxt2
    ;
local arm-instruction-set-extension-armv6zk =
    fp
    nofp
    ;
local arm-instruction-set-extension-armv7 =
    fp
    nofp
    ;
local arm-instruction-set-extension-armv7-a =
    mp
    sec
    fp
    simd
    vfpv3
    vfpv3-d16-fp16
    vfpv3-fp16
    vfpv4-d16
    vfpv4
    neon-fp16
    neon-vfpv4
    nosimd
    nofp
    ;
# @todo add more extensions for more instruction-set

local arm-instruction-set-extensions ;
for s in $(arm-instruction-sets)
{
  if $(arm-instruction-set-extension-$(s))
  {
    local b = $(s) ;
    for t in $(arm-instruction-set-extension-$(s))
    {
      # @todo should be creating every combination of the extensions
      b += "+$(t)" ;

      arm-instruction-set-extensions += $(b) ;
    }
  }
}

arm-instruction-sets += $(arm-instruction-set-extensions) ;

local arm-processors =
    0strongarm1110
    ares
    arm1020e
    arm1020t
    arm1022e
    arm1026ej-s
    arm10e
    arm10tdmi
    arm1136j-s
    arm1136jf-s
    arm1156t2-s
    arm1156t2f-s
    arm1176jz-s
    arm1176jzf-s
    arm710t
    arm720t
    arm740t
    arm7tdmi
    arm7tdmi-s
    arm8
    arm810
    arm9
    arm920
    arm920t
    arm922t
    arm926ej-s
    arm940t
    arm946e-s
    arm966e-s
    arm968e-s
    arm9e
    arm9tdmi
    cortex-a12
    cortex-a15
    cortex-a17
    cortex-a32
    cortex-a35
    cortex-a5
    cortex-a53
    cortex-a55
    cortex-a57
    cortex-a7
    cortex-a72
    cortex-a73
    cortex-a75
    cortex-a76
    cortex-a8
    cortex-a9
    cortex-m0
    cortex-m0.small-multiply
    cortex-m0plus
    cortex-m0plus.small-multiply
    cortex-m1
    cortex-m1.small-multiply
    cortex-m23
    cortex-m3
    cortex-m33
    cortex-m4
    cortex-m7
    cortex-r4
    cortex-r4f
    cortex-r5
    cortex-r52
    cortex-r7
    cortex-r8
    ep9312
    exynos-m1
    fa526
    fa606te
    fa626
    fa626te
    fa726te
    fmp626
    generic-armv7-a
    iwmmxt
    iwmmxt2
    marvell-pj4
    mpcore
    mpcorenovfp
    neoverse-n1
    strongarm
    strongarm110
    strongarm1100
    xgene1
    xscale
  ;

feature.feature instruction-set
    :
        # x86 and x86-64
        native i486 i586 i686 pentium pentium-mmx pentiumpro pentium2 pentium3
        pentium3m pentium-m pentium4 pentium4m prescott nocona core2 corei7 corei7-avx core-avx-i
        conroe conroe-xe conroe-l allendale merom merom-xe kentsfield kentsfield-xe penryn wolfdale
        yorksfield nehalem sandy-bridge ivy-bridge haswell broadwell skylake skylake-avx512 cannonlake
        icelake-client icelake-server cascadelake cooperlake tigerlake
        atom
        k6 k6-2 k6-3 athlon athlon-tbird athlon-4 athlon-xp athlon-mp k8 opteron athlon64 athlon-fx
        k8-sse3 opteron-sse3 athlon64-sse3 amdfam10 barcelona bdver1 bdver2 bdver3 bdver4 btver1
        btver2 znver1 znver2
        winchip-c6 winchip2
        c3 c3-2 c7

        # ia64
        itanium itanium1 merced itanium2 mckinley

        # Sparc
        v7 cypress v8 supersparc sparclite hypersparc sparclite86x f930 f934
        sparclet tsc701 v9 ultrasparc ultrasparc3

        # RS/6000 & PowerPC
        401 403 405 405fp 440 440fp 505 601 602 603 603e 604 604e 620 630 740 7400
        7450 750 801 821 823 860 970 8540 power-common ec603e g3 g4 g5 power power2
        power3 power4 power5 powerpc powerpc64 rios rios1 rsc rios2 rs64a

        # MIPS
        4kc 4kp 5kc 20kc m4k r2000 r3000 r3900 r4000 r4100 r4300 r4400 r4600 r4650
        r6000 r8000 rm7000 rm9000 orion sb1 vr4100 vr4111 vr4120 vr4130 vr4300
        vr5000 vr5400 vr5500

        # HP/PA-RISC
        700 7100 7100lc 7200 7300 8000

        # Advanced RISC Machines
        $(arm-instruction-sets)
        $(arm-processors)

        # z Systems (aka s390x)
        z196 zEC12 z13 z14 z15

    :
        propagated optional
    ;
